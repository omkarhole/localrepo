import array as arr

# Accept the Roll Numbers of the students
def accept_roll():
    a = arr.array('I', [])
    no_stud = int(input("Enter the number of Students: "))
    for i in range(no_stud):
        a.append(int(input("Enter the Roll Number: ")))
    return a

# Print the Roll Numbers of the Student
def print_roll(a):
    for i in range(len(a)):
        print("\t", a[i], end=" ")
    print()

# Linear Search
def linear_search(a, x):
    for i in range(len(a)):
        if a[i] == x:
            return i
    return -1

# Sentinel Search
def sentinel_search(a, x):
    count = len(a)
    a.append(x)
    i = 0
    while a[i] != x:
        i += 1
    if i != count:
        return i
    else:
        return -1

# Binary Search recursive
def binary_search_R(a, l, r, x):
    if r >= l:
        mid = l + (r - l) // 2
        if a[mid] == x:
            return mid
        elif a[mid] > x:
            return binary_search_R(a, l, mid - 1, x)
        else:
            return binary_search_R(a, mid + 1, r, x)
    else:
        return -1

# Binary Search Non-Recursive
def binary_search_NR(a, l, r, x):
    while l <= r:
        mid = l + (r - l) // 2
        if a[mid] == x:
            return mid
        elif a[mid] < x:
            l = mid + 1
        else:
            r = mid - 1
    return -1

# Fibonacci Search
def fibonacci_search(a, x):
    fib1, fib2 = 0, 1
    fibn = fib1 + fib2
    a_len = len(a)
    
    while fibn < a_len:
        fib1, fib2 = fib2, fibn
        fibn = fib1 + fib2

    ind = -1
    while fibn > 1:
        n = min(ind + fib1, a_len - 1)
        if a[n] > x:
            fibn = fib2
            fib1 = fib1 - fib2
            fib2 = fibn - fib1
        elif a[n] < x:
            fibn = fib1
            fib1 = fib2
            fib2 = fibn - fib1
            ind = n
        else:
            return n

    if fib1 and ind + 1 < a_len and a[ind + 1] == x:
        return ind + 1
    return -1

# Insertion sort
def ins_sort(a):
    for i in range(1, len(a)):
        key = a[i]
        j = i - 1
        while j >= 0 and key < a[j]:
            a[j + 1] = a[j]
            j -= 1
        a[j + 1] = key
    return a

# Driver program
if __name__ == "__main__":
    unsort_A = arr.array('I', [])  # array of unsigned integer
    ins_sort_A = arr.array('I', [])
    flag = 1
    while flag == 1:
        menu = "1. Accept Student Roll Numbers of students who attended training program\n" \
               "2. Display the Roll Numbers of students who attended training program\n" \
               "3. Linear Search \n" \
               "4. Sentinel Search \n" \
               "5. Insertion Sort \n" \
               "6. Binary Search (Recursive) \n" \
               "7. Binary Search (Non-Recursive) \n" \
               "8. Fibonacci Search \n" \
               "9. Exit \n"
        print(menu)
        choice = int(input("Enter your choice: "))
        if choice == 1:
            unsort_A = accept_roll()
        elif choice == 2:
            print_roll(unsort_A)
        elif choice == 3:
            roll = int(input("Enter the Roll Number to be searched: "))
            index = linear_search(unsort_A, roll)
            if index != -1:
                print("Roll number", roll, "at the index", index, "has attended the training program")
            else:
                print("Roll number", roll, "has not attended the training program")
        elif choice == 4:
            roll = int(input("Enter the Roll Number to be searched: "))